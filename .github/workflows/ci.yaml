name: CI

on:
  push:
    tags:
      - "v[0-9]+.*"
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-12, windows-2022]
        include:
          - os: ubuntu-22.04
            name: linux
          - os: macos-12
            name: macos
          - os: windows-2022
            name: windows

    runs-on: ${{ matrix.os }}
    continue-on-error: true

    steps:
      - uses: Aynh/setup-v@fix/deprecated-warning
        id: setup-v
        with:
          stable: true

      - if: matrix.name == 'windows'
        name: Install SQLite Dependency
        shell: bash
        run: |
          export SQLITE=sqlite-amalgamation-3400000
          export V_THIRDPARTY="C:\hostedtoolcache\windows\v\${{ steps.setup-v.outputs.version }}\x64\thirdparty"
          curl --output sqlite.zip https://sqlite.org/2022/$SQLITE.zip
          unzip sqlite.zip -d "$V_THIRDPARTY"
          mv "$V_THIRDPARTY/$SQLITE" "$V_THIRDPARTY/sqlite"

      - uses: actions/checkout@v3

      - name: Check if code is formatted
        run: |
          v fmt -diff .
          v fmt -verify .

      - name: Run Tests
        run: v test .

      - if: ${{ !startsWith(github.ref , 'refs/tags/v') }}
        name: Build ${{ github.event.repository.name }} (debug)
        run: v .

      - if: startsWith(github.ref, 'refs/tags/v')
        name: Build ${{ github.event.repository.name }} (release)
        run: v -prod .

      - if: (matrix.name == 'linux') || (matrix.name == 'macos')
        name: Tar build artifact
        run: tar cf vkbbi.tar vkbbi

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}-binary
          path: |
            vkbbi.exe
            vkbbi.tar
